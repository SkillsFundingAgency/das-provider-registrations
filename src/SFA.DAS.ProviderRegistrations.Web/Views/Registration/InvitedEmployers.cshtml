@using SFA.DAS.ProviderRegistrations.Types
@using SFA.DAS.ProviderRegistrations.Web.Extensions
@using SFA.DAS.ProviderRegistrations.Web.ViewModels
@model SFA.DAS.ProviderRegistrations.Web.ViewModels.InvitationsViewModel

@{
    ViewData["Title"] = "Manage apprenticeships";
    ViewBag.GaData.Vpv = "/registrations/registration/invited-employers";
    ViewBag.ZenDeskLabel = "preg-Invited-employers";
}

@section Styles
{
    <link rel="Stylesheet" href="@Href("~/stylesheets/site.css")" />
}

@section breadcrumb
{
    <a id="back-link" class="govuk-back-link" href="@Url.ProviderApprenticeshipServiceLink("/account")">Back</a>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">
            Manage employer invitations
        </h1>
        <p class="govuk-body">
            Send email to employers to create their apprenticeship service account.
        </p>

        <a href="@Url.ProviderAction("StartAccountSetup")" role="button" draggable="false" class="govuk-button" data-module="govuk-button">
            Send invitation to employer
        </a>

        <h2 class="govuk-heading-m govuk-!-margin-top-6">
            Invited employers
        </h2>
        <div class="govuk-inset-text">
            The option to resend an invitation will only show if the employer has not yet started to create their account.
        </div>
    </div>
</div>

@if (Model.Invitations.Count > 0)
{
    <table class="govuk-table das-table--responsive das-table--double-arrows das-table--condensed">
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th scope="col" class="govuk-table__header">
                    <sfa-sortable-column-header class="@(Model.SortColumn == "EmployerOrganisation" ? Model.SortedByHeaderClassName : "das-table__sort")"
                                                data-sortColumn="@nameof(InvitationSortColumn.EmployerOrganisation)"
                                                asp-action="InvitedEmployers"
                                                asp-controller="Registration"
                                                sfa-sort-column="@nameof(InvitationSortColumn.EmployerOrganisation)"
                                                sfa-secondary-sort-column="@nameof(InvitationSortColumn.EmployerFirstname)"
                                                sfa-table-sort-column="@Model.SortColumn"
                                                sfa-sort-direction="@Model.SortDirection">Employer organisation</sfa-sortable-column-header>
                </th>
                <th scope="col" class="govuk-table__header">
                    <sfa-sortable-column-header class="@(Model.SortColumn == "EmployerFirstname" ? Model.SortedByHeaderClassName : "das-table__sort")"
                                                data-sortColumn="@nameof(InvitationSortColumn.EmployerFirstname)"
                                                asp-action="InvitedEmployers"
                                                asp-controller="Registration"
                                                sfa-sort-column="@nameof(InvitationSortColumn.EmployerFirstname)"
                                                sfa-secondary-sort-column="@nameof(InvitationSortColumn.EmployerOrganisation)"
                                                sfa-table-sort-column="@Model.SortColumn"
                                                sfa-sort-direction="@Model.SortDirection">Name</sfa-sortable-column-header>
                </th>
                <th scope="col" class="govuk-table__header">
                    <sfa-sortable-column-header class="@(Model.SortColumn == "EmployerEmail" ? Model.SortedByHeaderClassName : "das-table__sort")"
                                                data-sortColumn="@nameof(InvitationSortColumn.EmployerEmail)"
                                                asp-action="InvitedEmployers"
                                                asp-controller="Registration"
                                                sfa-sort-column="@nameof(InvitationSortColumn.EmployerEmail)"
                                                sfa-secondary-sort-column="@nameof(InvitationSortColumn.EmployerOrganisation)"
                                                sfa-table-sort-column="@Model.SortColumn"
                                                sfa-sort-direction="@Model.SortDirection">Employer email</sfa-sortable-column-header>
                </th>
                <th scope="col" class="govuk-table__header">
                    <sfa-sortable-column-header class="@(Model.SortColumn == "CreatedDate" ? Model.SortedByHeaderClassName : "das-table__sort")"
                                                data-sortColumn="@nameof(InvitationSortColumn.CreatedDate)"
                                                asp-action="InvitedEmployers"
                                                asp-controller="Registration"
                                                sfa-sort-column="@nameof(InvitationSortColumn.CreatedDate)"
                                                sfa-secondary-sort-column="@nameof(InvitationSortColumn.EmployerOrganisation)"
                                                sfa-table-sort-column="@Model.SortColumn"
                                                sfa-sort-direction="@Model.SortDirection">Date sent</sfa-sortable-column-header>
                </th>
                <th scope="col" class="govuk-table__header">
                    <sfa-sortable-column-header class="@(Model.SortColumn == "Status" ? Model.SortedByHeaderClassName : "das-table__sort")"
                                                data-sortColumn="@nameof(InvitationSortColumn.Status)"
                                                asp-action="InvitedEmployers"
                                                asp-controller="Registration"
                                                sfa-sort-column="@nameof(InvitationSortColumn.Status)"
                                                sfa-secondary-sort-column="@nameof(InvitationSortColumn.EmployerOrganisation)"
                                                sfa-table-sort-column="@Model.SortColumn"
                                                sfa-sort-direction="@Model.SortDirection">Status</sfa-sortable-column-header>
                </th>
                <th scope="col" class="govuk-table__header"></th>
            </tr>
        </thead>
        <tbody class="govuk-table__body">
            @foreach (var invitation in Model.Invitations)
            {
                <tr class="govuk-table__row">
                    <td class="govuk-table__cell" data-label="Employer organisation">
                        <span class="das-breakable">
                            @invitation.EmployerOrganisation
                        </span>
                    </td>
                    <td class="govuk-table__cell" data-label="Name">
                        <span class="das-breakable">
                            @invitation.Name
                        </span>
                    </td>
                    <td class="govuk-table__cell" data-label="Employer email">
                        <span class="das-breakable">
                            @invitation.EmployerEmail
                        </span>
                    </td>
                    <td class="govuk-table__cell" data-label="Date sent">
                        <span class="das-no-wrap">
                            @invitation.SentDate.ToString("dd MMM yy")
                        </span>
                    </td>
                    <td class="govuk-table__cell" data-label="Status">
                        @invitation.State
                    </td>
                    @if (invitation.ShowResendInvitationLink)
                    {
                        <td class="govuk-table__cell">

                            <a href="@Url.Action("ReviewDetails", new { ProviderId = Model.ProviderId, Reference = invitation.Reference })">Resend invitation</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}